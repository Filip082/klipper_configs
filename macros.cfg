# SuperSlicer: SET_MATERIAL MATERIAL=[filament_type] NOZZLE=[nozzle_diameter]
[gcode_macro SET_MATERIAL]
variable_presets: {
      '0.4': {
        'PLA':  { 'pa': 0.060, 'z':  0.000 },
        'ASA':  { 'pa': 0.045, 'z': -0.100 },
        'PETG': { 'pa': 0.050, 'z':  0.025 }
        },
      '0.6': {
        'PLA':  { 'pa': 0.050, 'z':  0.000 },
        'ASA':  { 'pa': 0.000, 'z': -0.080 },
        'PETG': { 'pa': 0.000, 'z':  0.080 }
        }
      }
gcode:  
    {% set material = params.MATERIAL | default('PLA') | upper %}
    {% set nozzle = params.NOZZLE | default('0.4') | lower %}
    {% set pressure_advance = printer["gcode_macro SET_MATERIAL"].presets[nozzle][material]['pa'] %}
    {% set z_offset = printer["gcode_macro SET_MATERIAL"].presets[nozzle][material]['z'] %}
    
    SET_PRESSURE_ADVANCE ADVANCE={pressure_advance}   
    SET_GCODE_OFFSET Z={z_offset}

# SuperSlicer: PRINT_START EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# 
# MULTICOLOR values
#   - 0 for single color
#   - 1 for first file in sequence
#   - 2 for other colors
#   - 3 for last file
# 
[gcode_macro PRINT_START]
variable_multicolor: 0
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP | default(220) | lower %}
    {% set bed_temp = params.BED_TEMP | default(60) | lower %}
    {% set multicolor = params.MULTICOLOR | default(0) | int %}

    # {action_respond_info('extruder_temp: ' + extruder_temp)}
    # {action_respond_info('bed_temp: ' + bed_temp)}

    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=multicolor VALUE={multicolor}

    CLEAR_PAUSE
    
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp} ; set final bed temp 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
    {% if multicolor == 2 or multicolor == 3 %}
      BED_MESH_PROFILE LOAD=default
      {action_respond_info('Loading mesh...')}
    {% else %}
      LEVEL_BED
    {% endif %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp} ; set final nozzle temp
    G1 Z30 F300
    G1 X117.5 Y0 F1800   
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp} ; wait for nozzle temp to stabilize
    _PURGE_LINE

    # G90 ; use absolute coordinates
    # M83 ; extruder relative mode
    # M190 S[first_layer_bed_temperature] ; set final bed temp 
    # M104 S150 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
    # LEVEL_BED
    # M104 S[first_layer_temperature] ; set final nozzle temp
    # G1 Z30 F300
    # G1 X0 Y0 F3000
    # M109 S[first_layer_temperature] ; wait for nozzle temp to stabilize
    # _PURGE_LINE

[gcode_macro END_PRINT]
variable_x_park: 0
variable_y_park: 220
variable_z_park: 30
gcode:
    {% set multicolor = printer["gcode_macro PRINT_START"].multicolor %}
    
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park) %}
        {% set z_safe = z_park + act_z %}
    {% else %}
        {% set z_safe = max_z %}
    {% endif %}

    {% if multicolor == 1 or multicolor == 2 %}
      CHANGE_FILAMENT
    {% else %}
      G10
      TURN_OFF_HEATERS 
      G90   
      G0 X{x_park} Y{y_park} Z{z_safe} F2100     
      M84 ; disable motors
      SET_GCODE_OFFSET Z=0
      STATUS_BUSY
    {% endif %}   
    
    # {if max_layer_z < max_print_height}G1 Z{z_offset+min(max_layer_z+2, max_print_height)} F600 ; Move print head up{endif}
    # G1 X5 Y{print_bed_max[1]*0.8} F{travel_speed*60} ; present print
    # {if max_layer_z < max_print_height-10}G1 Z{z_offset+min(max_layer_z+50, max_print_height-10)} F600 ; Move print head further up{endif}
    # TURN_OFF_HEATERS
    # M107 ; turn off fan
    # M84 ; disable motors
    # SET_GCODE_OFFSET Z=0

[gcode_macro _PURGE_LINE]
gcode:
    STATUS_CLEANING  
    G1 X75 Y-1 F3000
    G1 Z0.3 F450
    G92 E0
    G1 X160 E12.5 F1500 ; prime the nozzle
    G1 Y-0.7 F5000
    G92 E0
    G1 X75 E12.5 F1200 ; prime the nozzle
    G92 E0
    STATUS_PRINTING

# [gcode_macro HEATSOAK]
# gcode:    
#     SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
#     SET_IDLE_TIMEOUT TIMEOUT=1800
#     STATUS_HOMING
#     G28
#     STATUS_HEATING
#     M106 S51
#     G1 X117.5 Y75 Z30

[gcode_macro HEATSOAK]
variable_heating_temp: 100
variable_cycles: 3
variable_current_cycle: 0
gcode:    
    {% if 'TEMP' in params|upper %}
      {% set heating_temp = params.TEMP | float %}
      SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=heating_temp VALUE={heating_temp}
    {% endif %}
    {% if 'CYCLES' in params|upper %}
      {% set cycles = params.CYCLES | float %}
      SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=cycles VALUE={cycles}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=current_cycle VALUE=1

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={heating_temp}
    STATUS_HOMING
    G28
    STATUS_HEATING   
    G1 X117.5 Y75 Z30
    UPDATE_DELAYED_GCODE ID=HEATSOAK DURATION=600
    M106 S51

[delayed_gcode HEATSOAK]
gcode:
    {% set heating_temp = printer["gcode_macro HEATSOAK"].heating_temp %}
    {% set cycles = printer["gcode_macro HEATSOAK"].cycles %}
    {% set current_cycle = printer["gcode_macro HEATSOAK"].current_cycle + 1 %}

    {% if current_cycle < cycles %}
      UPDATE_DELAYED_GCODE ID=HEATSOAK DURATION=600
    {% else %}
      UPDATE_DELAYED_GCODE ID=HEATSOAK DURATION=0
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=current_cycle VALUE={current_cycle}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={heating_temp}

[gcode_macro LEVEL_BED]
gcode: 
    M107  
    # {action_respond_info('Leveling bed...')}
    STATUS_HOMING
    RESPOND MSG="Homing..."   
    G28 ; home all axis 
    STATUS_LEVELING
    RESPOND MSG="Adjusting Z..."
    Z_TILT_ADJUST    
    STATUS_MESHING  
    RESPOND MSG="Calibrating bed mesh..."  
    BED_MESH_CALIBRATE ; auto bed levelling
    
    STATUS_READY

[gcode_macro UNLOAD]
variable_unload_length: 80 # [mm] #
gcode:
    {% if printer.extruder.can_extrude|lower == 'true' %}
      RESPOND MSG="Unloading filament..."
      # {action_respond_info('Unloading filament...')}
      G92 E0
      G1 E-10.0 F2100
      G1 E-7.5 F1500
      G1 E-15.0 F2100
      G1 E-{unload_length} F1200
    {% else %}
      {action_raise_error("Extruder not hot enough")}
    {% endif %}

[gcode_macro LOAD]
variable_load_length: 75 # [mm] #
variable_fast_load_length: 60 # [mm] #
gcode:
    {% if printer.extruder.can_extrude|lower == 'true' %}
      RESPOND MSG="Loading filament..."
      # {action_respond_info('Loading filament...')}
      G92 E0
      G1 E{fast_load_length} F1000
      G1 E{load_length} F240
      PURGE LENGTH=50
    {% else %}
      {action_raise_error("Extruder not hot enough")}
    {% endif %}

[gcode_macro PURGE]
variable_purge_length: 30 # [mm] #
gcode:
    {% if 'LENGTH' in params|upper %}
      {% set purge_length = params.LENGTH | float %}
    # {% else %}
    #   {% set length = printer["gcode_macro PURGE"].purge_length %}
    {% endif %}

    {% if printer.extruder.can_extrude|lower == 'true' %}
      RESPOND MSG="Purging nozzle... {purge_length}mm"
      # {action_respond_info('Purging nozzle...')}
      G92 E0
      G1 E{purge_length} F240
      G10
      RESPOND MSG="Do you want to PURGE more?"
      # {action_respond_info('Do you want to PURGE more?')}
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}

[gcode_macro CHANGE_FILAMENT]
variable_x_park: 117.5
variable_y_park: 0
variable_z_park: 15
gcode:
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park) %}
        {% set z_safe = z_park %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
  
    # {% set trg_temp = printer.extruder.target|float %}    
    # {% if trg_temp < 175 %}
    #     SET_HEATER_TEMPERATURE HEATER=extruder TARGET=220
    #     {% set trg_temp = printer.extruder.target|float %}
    # {% endif %}
    # {% set act_temp = printer.extruder.temperature|float %}
    # {% if act_temp < trg_temp %}      
    #     TEMPERATURE_WAIT SENSOR=extruder MINIMUM={trg_temp}
    # {% endif %}

    {% if printer.extruder.can_extrude|lower == 'true' %}
      G10
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    _BEEP S=1500 P=350
    STATUS_BUSY
    PAUSE_BASE
    {% if "xyz" in printer.toolhead.homed_axes %}
      G91
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    UNLOAD
    RESPOND MSG="LOAD filament!!!"

[output_pin BEEPER_Pin]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[gcode_macro _BEEP]
gcode:  
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
      {% set F = 1 %}
      {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
      {% set F = 0 %}
    {% else %}
      {% set F = 1/S %} ;convert frequency to seconds 
    {% endif %}
    SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=BEEPER_Pin VALUE=0

[gcode_macro M600]
gcode:
    # {% set X = params.X|default(50)|float %}
    # {% set Y = params.Y|default(0)|float %}
    # {% set Z = params.Z|default(10)|float %}
    # SAVE_GCODE_STATE NAME=M600_state
    # _BEEP S=1500 P=350
    # PAUSE
    # G91
    # G1 E-.8 F2700
    # G1 Z{Z}
    # G90
    # G1 X{X} Y{Y} F3000
    # G91
    # G1 E-50 F1000
    # RESTORE_GCODE_STATE NAME=M600_state
    CHANGE_FILAMENT